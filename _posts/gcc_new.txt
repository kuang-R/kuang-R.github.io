== {cpp}中的new

我一直都很好奇{cpp}中的new到底是怎么回事。它是直接由编译器实现的吗？它跟C语言中的malloc有什么区别？

初略地看了一下gcc的{cpp}库，我发现new只是一个可重载的操作符，跟+这些操作符没什么两样。标准库有实现对operator new的重载。还有一点就是，gcc的标准库默认使用malloc作为new的分配内存操作。

new包含两个操作：分配内存和执行构造函数，我并没有找到第二个操作的源代码，不知道是不是编译器做的。

[source, c++]
.libsupc++/new_op.cc:33
----
#if _GLIBCXX_HOSTED
using std::malloc;
#else
// A freestanding C runtime may not provide "malloc" -- but there is no
// other reasonable way to implement "operator new".
extern "C" void *malloc (std::size_t);
#endif
----

== allocator

gcc发展到11.2的版本，默认空间配置器不再是std::alloc，而换成了std::allocator。

默认的allocator继承__gcc_cxx::bitmap_allocator模板类，具体的功能在后者类中实现。